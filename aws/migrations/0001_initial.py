# Generated by Django 2.1.5 on 2019-02-07 10:03

from django.db import migrations, models
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppsDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('description', models.TextField()),
                ('plan_to_migrate', models.CharField(choices=[('yes', 'YES'), ('no', 'NO')], max_length=256)),
                ('server_names', models.TextField(null=True)),
                ('create_app_response', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreateMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(choices=[('asasd', 'asasd'), ('asdasd', 'asdasd'), ('Aifi-2', 'Aifi-2'), ('ec2-test', 'ec2-test'), ('ec2-second', 'ec2-second'), ('Testing2', 'Testing2'), ('farhaan-testing', 'farhaan-testing')], max_length=1000)),
                ('env_name', models.CharField(choices=[('dev', 'dev'), ('dev1', 'dev1'), ('new', 'new'), ('farees', 'farees'), ('farhaan test', 'farhaan test'), ('asdasd', 'asdasd'), ('adssa', 'adssa'), ('asdvfvd', 'asdvfvd'), ('farhaan-testing123', 'farhaan-testing123'), ('first-full-testing', 'first-full-testing'), ('asdavt2323', 'asdavt2323'), ('asdasdasdas', 'asdasdasdas'), ('cghfthft565hgd', 'cghfthft565hgd')], max_length=1000)),
                ('source_ip', models.GenericIPAddressField(default='192.168.1.2')),
                ('source_username', models.CharField(max_length=1000)),
                ('source_password', models.CharField(max_length=1000)),
                ('source_db', models.CharField(max_length=1000)),
                ('destination_db', models.CharField(choices=[('MySQL', 'MySQL'), ('Oracle', 'Oracle'), ('Oracle', 'Oracle'), ('MySQL', 'MySQL'), ('MySQL', 'MySQL'), ('MySQL', 'MySQL'), ('MySQL', 'MySQL'), ('MySQL', 'MySQL'), ('Oracle', 'Oracle'), ('MySQL', 'MySQL'), ('Oracle', 'Oracle')], max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='InfraCicd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_repo', models.CharField(choices=[('s3', 's3'), ('code commit', 'code commit')], max_length=1000)),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='InfraDatabases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine', models.CharField(choices=[('Oracle', 'Oracle'), ('MySQL', 'MySQL')], max_length=1000)),
                ('db_instance_class', models.CharField(choices=[('t2.micro', 't2.micro')], max_length=1000)),
                ('username', models.CharField(max_length=256)),
                ('password', models.CharField(max_length=1000)),
                ('volume_size', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='InfraServiceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(choices=[('asasd', 'asasd'), ('asdasd', 'asdasd'), ('Aifi-2', 'Aifi-2'), ('ec2-test', 'ec2-test'), ('ec2-second', 'ec2-second'), ('Testing2', 'Testing2'), ('farhaan-testing', 'farhaan-testing')], max_length=1000)),
                ('env_name', models.CharField(max_length=1000, unique=True)),
                ('stack', models.CharField(choices=[('ami-03787fa0594b1f151', 'ami-03787fa0594b1f151'), ('PHP', 'PHP'), ('Lnux', 'Lnux')], max_length=1000)),
                ('description', models.TextField(blank=True)),
                ('no_of_instance', models.CharField(choices=[('1', '1'), ('2', '2'), ('4', '4')], max_length=256)),
                ('instance_type', models.CharField(choices=[('t2.micro', 't2.micro')], max_length=256)),
                ('ssh_location', models.GenericIPAddressField(default='192.168.1.2')),
            ],
        ),
        migrations.CreateModel(
            name='ServerAwsInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agentId', models.CharField(max_length=1000)),
                ('configurationId', models.CharField(max_length=1000)),
                ('hostName', models.CharField(max_length=1000)),
                ('osName', models.CharField(max_length=1000)),
                ('osVersion', models.CharField(max_length=1000)),
                ('source', models.CharField(max_length=1000)),
                ('timeOfCreation', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='StaticData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stack', django_mysql.models.ListCharField(models.CharField(max_length=1000), max_length=1000, size=None)),
                ('description', django_mysql.models.ListCharField(models.CharField(max_length=1000), max_length=1000, size=None)),
                ('instance_type', django_mysql.models.ListCharField(models.CharField(max_length=1000), max_length=1000, size=None)),
                ('instance_number', django_mysql.models.ListCharField(models.CharField(max_length=1000), max_length=1000, size=None)),
                ('engine', django_mysql.models.ListCharField(models.CharField(max_length=1000), max_length=1000, size=None)),
            ],
        ),
    ]
